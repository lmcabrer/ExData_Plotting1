vector<-(c(0,findErdosRecursiveSol(n-1) )+1)
while(!notDuplicatedSum(vector)){vector<-(vector+1)}
return(vector)
}
doubledSolution<-function(vector) {
if(length(vector)>=15) {return(0)}
y<-c(vector[length(vector)]-1,vector+vector[length(vector)])
print(notDuplicatedSum(y))
doubledSolution(y)
}
addedSolution<-function(vector) {
for(i in 1:100)
print(notDuplicatedSum(vector+i))
}
FindAllLeosSolutionUpTo<-function(n=5) {
if (n==1) {
return(list( 1L))
}
Solutions<-FindAllLeosSolutionUpTo(n-1)
vector<-  (c(0,Solutions[[n-1]]) +1)
while(!notDuplicatedSum(vector)){vector<-(vector+1)}
Solutions[[n]]<- vector
Solutions
}
nextGoodSolution<- function(vector) {
count<- 0L
value<-vector[length(vector)]
while(count<100) {
if (notDuplicatedSum(vector)) {
print(count)
count<-count+1
} else {
count<-0L
print(vector[length(vector)])
}
vector<-vector+1
}
vector[length(vector)]-100
}
FindAllLeosGoodSolutionUpTo<-function(n=5) {
if (n==1) {
return(list( 1L))
}
Solutions<-FindAllLeosGoodSolutionUpTo(n-1)
vector<-  (c(0,Solutions[[n-1]]) +1)
count<- 0L
value<-vector[length(vector)]
while(count<100) {
if (notDuplicatedSum(vector)) {
count<-count+1
} else {
count<-0L
}
vector<-vector+1
}
Solutions[[n]]<- vector-100
Solutions
}
GenerateUpperBoundValue<- function(n){
if (n==0){return(0L)}
if (n==1){return(1L)}
(2*GenerateUpperBoundValue(n-1))-GenerateUpperBoundValue(floor((n-2)/2))
}
CreateSequenceBoundValues<- function(n){
if (n==1){return(1L)}
solution <-c(0L,1L)
for (i in 2:n) {solution<- c(solution, 2*solution[i]-solution[floor((i-2)/2)+1])}
solution[2:(n+1)]
}
CreateSequenceGoodSolutions <- function(n) {
boundSeq<-c(0,CreateSequenceBoundValues(n))
boundSeq[n+1]-boundSeq[1:n]
}
dif<-function(vector){
#we assume it ordere already
vector-c(vector[2:length(vector)],0)
}
findErdos(2,2)
findErdos(3,2)
findErdos(1,16)
findErdos(15,2)
FindAllLeosGoodSolutionUpTo(15)
FindAllLeosGoodSolutionUpTo(10)
findErdosRecursiveSol
findErdosRecursiveSol(4)
findErdosRecursiveSol(20)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
select(cran, -(X:size))
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filer(cran, country == "US", r_version>="3.0.2")
filter(cran, country == "US", r_version>="3.0.2")
filter(cran, country == "IN", r_version>="3.0.2")
filter(cran, country == "IN", r_version<="3.0.2")
filter(cran, country == "US" | country == "IN")
filter(cran, size> 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<- select(cran, size:ip_id)
arange(cran2, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(rversion), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, corect_size = size + 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avq_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-select(pack_sum, count>679)
top_counts<-select(pack_sum, count>679.0)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top+counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
View(by_package)
View(cran)
View(cran2)
View(pack_sum)
View(top_counts)
View(top_counts_sorted)
View(top_unique)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count,-grade)
res
View(res)
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status = "passed")
failed<-mutate(passed, status = "failed")
failed<-mutate(failed, status = "failed")
?bind_rows
bind_rows(failed,passed)
bind_rows(passed,failed)
sat
?separate
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day<- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label= TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19/20/12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<- update(this_moment, hours = 15, minutes = 02)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<- update(depart, hours = 17, minutes = 34)
depart
depart<- depart+hours(15)+minutes(50)
arrive<- depart+hours(15)+minutes(50)
depart<- depart-hours(15)-minutes(50)
arrive<- depart+hours(15)+minutes(50)
depart
arrive<- depart+hours(15)+minutes(50)
arrive <- depart + hours(15) + minutes(50)
info()
depart()
depart
arrive
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(12) + minutes(50)
arrive <- depart + hours(11) + minutes(50)
arrive <- depart + hours(10) + minutes(50)
arrive <- depart + hours(13) + minutes(50)
arrive <- depart + hours(14) + minutes(50)
arrive <- depart + hours(8) + minutes(50)
arrive <- depart + hours(7) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive
quit
quit()
setwd("~/coursera/GitHub/ExData_Plotting1")
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file="plot3.png")
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", pch = "_", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
rm(TwoDaysFeb) # not necessary anymore
rm(tableAll) # Removing big table
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file="plot3.png")
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", pch = "_", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
rm(tableFirstDaysFeb)
?plot
?legend
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
rm(TwoDaysFeb) # not necessary anymore
rm(tableAll) # Removing big table
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file="plot3.png")
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty=1,  #pch = "_",
col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file = "plot4.png")
par(mfcol = c(2, 2))
with(tableFirstDaysFeb, hist(Global_active_power,col = "red", breaks = interval, main = "Global Active Power", xlab = "Global Active Power (kilowatts)"))
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab=""))
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
rm(TwoDaysFeb) # not necessary anymore
rm(tableAll) # Removing big table
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, hist(Global_active_power,col = "red", breaks = interval, main = "Global Active Power"))
#UpRight drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
#rm(tableFirstDaysFeb)
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
#with(tableFirstDaysFeb, hist(Global_active_power,col = "red", breaks = interval, main = "Global Active Power"))
#UpRight drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, border = "white", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, fill = "white", border = "white", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, bty = "n", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
rm(tableFirstDaysFeb)
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
rm(TwoDaysFeb) # not necessary anymore
rm(tableAll) # Removing big table
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l", ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="", ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, bty = "n", col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime", ))
dev.off()
rm(tableFirstDaysFeb)
##Initialization of the data set
tableAll <- read.table("household_power_consumption.txt", sep = ";",header =TRUE, na.strings="?", colClasses= c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
tableAll$Date<-as.Date(tableAll$Date, "%d/%m/%Y")
TwoDaysFeb<<- tableAll$Date<as.Date("2007-02-03") & tableAll$Date>as.Date("2007-01-31")
tableFirstDaysFeb <- tableAll[TwoDaysFeb,]
rm(TwoDaysFeb) # not necessary anymore
rm(tableAll) # Removing big table
tableFirstDaysFeb$Time   <- as.POSIXlt(paste(tableFirstDaysFeb$Date, tableFirstDaysFeb$Time, sep=" "))
#Creating the plot file
png(file = "plot4.png")
par(mfcol = c(2, 2))
#UpLeft drawing
with(tableFirstDaysFeb, plot(Time,Global_active_power, type = "l",
ylab = "Global Active Power", xlab=""))
#DownLeft drawing
with(tableFirstDaysFeb, plot(Time, Sub_metering_1, type="n", xlab="",
ylab="Energy sub metering"))
with(tableFirstDaysFeb, points(Time, Sub_metering_1,type="l"))
with(tableFirstDaysFeb, points(Time, Sub_metering_2,type="l",col="red"))
with(tableFirstDaysFeb, points(Time, Sub_metering_3,type="l",col="blue"))
legend("topright", lty = 1, bty = "n", col = c("black",  "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#UpRigth drawing
with(tableFirstDaysFeb, plot(Time,Voltage, type = "l",  xlab="datetime"))
#DownRight
with(tableFirstDaysFeb, plot(Time, Global_reactive_power, type="l", xlab="datetime" ))
dev.off()
rm(tableFirstDaysFeb)
